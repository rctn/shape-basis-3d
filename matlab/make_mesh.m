%This function takes a .mat file generated by the SC pipeline and creates vertices, meshes
%Options include adding the mean
%Input = fname, add_mean, no_basis,shape1,shape2

function [ret_flag] = make_mesh(fname,add_mean,no_basis,shape1,shape2,PCA_SPARSE)
dbstop if error

if nargin<2
	add_mean=1
end

if nargin<3
	no_basis=50
end

if nargin<4
	shape1 = 256
	shape2 = 200
end

if nargin<5
	PCA_SPARSE=1 %Setting it to PCA
end

%Load the filename
try
	load(strcat(fname,'.mat'))
catch
	disp('Could not load the file name')
	return
end

try
	mkdir('split_mat')
	disp('Created the split mat folder')
catch
	disp('Folder already exists')
	return
end

try
	cd('split_mat')
	disp('Moved to the split mat folder')
catch
	disp('Unable to navigate to such a folder')
end

reshaped_mean = reshape(mean_face,shape1,shape2);
for ii=1:no_basis
	sprintf('The value of ii is --%d',ii)
	if PCA_SPARSE == 0
		Z = reshape(sparse_shape_basis(:,ii),shape1,shape2);
	else
		Z = reshape(shape_eig_vectors_face(ii,:),shape1,shape2);
	end
% 	Z = Z *(1/sqrt(shape_eig_vals(ii)));
	[faces,vertices] = surf2patch(reshape(X,shape1,shape2),reshape(Y,shape1,shape2),Z,'triangles');
	if add_mean==1
		Z = Z + reshaped_mean;
	end
	[faces,vertices] = surf2patch(reshape(X,shape1,shape2),reshape(Y,shape1,shape2),Z,'triangles');
	save(strcat('Sparse_basis_',int2str(ii)),'faces','vertices');
end

end
